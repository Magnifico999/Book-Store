@using Book.DataAccess.DTO;
@model PaginatedList<GetProduct>


<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient m-lg-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Product List</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <div class="row pb-3">
            
            <div class="col-12 text-end">
                <a asp-controller="Product" asp-action="Upsert" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i>Create New Product
                </a>
            </div>
        </div>
        <div class="row pb-3">
            <div class="col-md-3 offset-md-9">
                <form asp-controller="Product" asp-action="Search" method="get" class="form-inline">
                    <div class="input-group">
                        <button type="submit" class="btn btn-outline-secondary">
                            Search
                        </button>
                        <input type="text" class="form-control" name="searchString" placeholder="">

                    </div>
                </form>
            </div>
        </div>
        <table class="table table-bordered table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>
                        Title
                    </th>
                    <th>
                        ISBN
                    </th>
                    <th>
                        Price
                    </th>
                    <th>
                        Author
                    </th>
                    <th>
                        Category
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Items.Any())
                {
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>@item.Title</td>
                            <td>@item.ISBN</td>
                            <td>@item.Price</td>
                            <td>@item.Author</td>
                            <td>
                                @if (item.Category != null && item.Category.Name != null)
                                {
                                    @item.Category.Name
                                }
                                else
                                {
                                    <span class="text-danger">Category Not Available</span>
                                }
                            </td>
                            <td>
                                <a asp-controller="Product" asp-action="UpdateProduct" asp-route-Id="@item.Id" class="btn btn-success"><i class="bi bi-pencil-square"></i></a>
                                <a asp-controller="Product" asp-action="DeleteProduct" asp-route-Id="@item.Id" class="btn btn-danger"><i class="bi bi-trash-fill"></i></a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
            
        </table>
    </div> @if (Model != null && Model.TotalPages > 1)
    {
        <div class="mt-3">
            <nav aria-label="Transaction navigation">
                <ul class="pagination justify-content-center">
                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="?page=@i">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>


